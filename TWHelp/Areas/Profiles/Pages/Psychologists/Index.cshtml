@page
@model TWHelp.Areas.Profiles.Pages.Psychologists.IndexModel

<div class="container-fluid">
    <div class="row d-flex flex-column">
        <div class="mx-auto">
            <h2 class="text-center">Psychologists page</h2>
        </div>

        <div class="col-12 col-sm-11 col-md-10 mx-auto my-3">
            <div class="mx-3">
                <label for="search">Psychologist name and surname</label>
            </div>
            <form class="d-flex justify-content-between" onsubmit="searchForPsycoProfiles(event)" id="search-form">
                <div class="col-9">
                    <input type="text" class="form-control" id="search-text" placeholder="John Johnson" list="psychoResults" oninput="autocompleteForPsychoProfiles()">
                    @*content for autocomplete*@
                    <datalist id="psychoResults">
                    </datalist>
                </div>
                <div class="col-3">
                    <button type="submit" class="btn btn-primary mb-2">Search</button>
                </div>
            </form>
        </div>

        <div class="col-12 col-sm-11 col-md-10 mx-auto">
            <p class="font-weight-bold text-center">List of psychologists</p>
            <div class="d-flex flex-column" id="psycho-container">
                @* add here content from js *@
            </div>

            <div>
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        <li class="page-item"><a class="page-link" href="#" onclick="changeCurrentPsychoPage('previous')">Previous</a></li>
                        <li class="page-item"><a class="page-link" href="#" onclick="changeCurrentPsychoPage('1')">1</a></li>
                        <li class="page-item"><a class="page-link" href="#" onclick="changeCurrentPsychoPage('2')">2</a></li>
                        <li class="page-item"><a class="page-link" href="#" onclick="changeCurrentPsychoPage('3')">3</a></li>
                        <li class="page-item"><a class="page-link" href="#" onclick="changeCurrentPsychoPage('next')">Next</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<template id="template">
    <div id="psycho-div" class="m-2 p-2" style="background-color: #fafafa">
        <div class="d-flex flex-column flex-md-row ">
            <div>
                <div>
                    <img id="psycho-image" src="" alt="profile-image" class="m-3 rounded-circle" style="border: 1px solid black;" width="200" height="200">
                </div>
            </div>
            <div class="d-flex flex-column flex-md-row flex-md-wrap flex-lg-nowrap">
                <div class="m-3">
                    <p>Name: <span id="psycho-name"></span></p>
                    <p>Age: <span id="psycho-age"></span></p>
                    <p>Is psycho confirm his degree: <span id="psycho-confirm"></span></p>
                </div>
                <div class="m-3">
                    <div class="d-flex">
                        <p class="m-1">Psycho degree:</p>
                        <p class="m-1" id="psycho-degree"></p>
                    </div>
                    <div class="d-flex">
                        <p class="m-1">Area of experetise:</p>
                        <p class="m-1" id="psycho-expertise-area"></p>
                    </div>
                    <div class="d-flex">
                        <p class="m-1">Psycho work experience:</p>
                        <p class="m-1" id="psycho-experience"></p>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <div>
                <p>Number of likes: <span id="psycho-likes"></span></p>
            </div>
            <div id="psycho-like">
                <i id="psycho-like-like" class="far fa-heart" style="color: red; font-size: 20px;"></i>
            </div>
        </div>
    </div>
</template>

<style>
    #psycho-like-like {
        transition: all 0.2s ease-in-out; 
    }

    #psycho-like-like:hover {
        transform: scale(1.5, 1.5);
        color: orange;
    }
</style>

<script>
    const webRoot = 'http://' + '@Model.WebRoot';
    const isPsycho = '@Model.IsUserPsycho';

    window.onload = function () {
        getPsychosProfiles();
    }

    //send to elastic search
    async function searchForPsycoProfiles(event) {
        event.preventDefault();

        let text = document.getElementById('search-text').value;

        if (text == '' || text == null || text == undefined) {
            document.getElementById('search-text').placeholder = 'field is empty';

            document.getElementById('search-text').classList.remove('gray-placeholder');
            document.getElementById('search-text').classList.add('red-placeholder');

            getPsychosProfiles();

            return;
        }

        document.getElementById('search-text').classList.remove('red-placeholder');
        document.getElementById('search-text').classList.add('gray-placeholder');

        await fetch(webRoot + '/api/search/full/psychologist/' + text, {
                method: 'GET'
            })
            .then(response => response.json())
            .then(data => _displayElasticItems(data))
            .catch(error => console.error('Unable to get items.', error));
    }

    async function autocompleteForPsychoProfiles() {
        let text = document.getElementById('search-text').value;

        if (text == '' || text == null || text == undefined) {
            return;
        }

        await fetch(webRoot + '/api/search/autocomplete/psychologist/' + text, {
                method: 'GET'
            })
            .then(response => response.json())
            .then(data => _displayAutocomplete(data))
            .catch(error => console.error('Unable to get items.', error));
    }

    function changeCurrentPsychoPage(button) {
        if (button == 'previous') {
            currentPsychoPage -= 10;

            if (currentPsychoPage < 0) {
                currentPsychoPage = 0;
            }
        }
        else if (button == '1') {
            currentPsychoPage = 0;
        }
        else if (button == '2') {
            currentPsychoPage = 11;
        }
        else if (button == '3') {
            currentPsychoPage = 21;
        }
        else if (button == 'next') {
            currentPsychoPage += 10;
        }

        getPsychosProfiles();
    }

    let currentPsychoPage = 0;
    async function getPsychosProfiles() {

        await fetch(webRoot + '/api/psychologists/part/' + currentPsychoPage + '/' + (currentPsychoPage + 10))
            .then(response => response.json())
            .then(data => _displayItems(data))
            .catch(error => console.error('Unable to get items.', error));
    }

    function addLikeToProfile(psychoId) {
        if (!isPsycho) {
            return;
        }

        fetch(webRoot + '/api/likes/add/' + psychoId, {
            method: 'POST',
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            }
        })
        .catch(error => console.error('Unable to add like.', error));
    }

    function removeLikeFromProfile(psychoId) {
        if (!isPsycho) {
            return;
        }

        fetch(webRoot + '/api/likes/remove/' + psychoId, {
            method: 'DELETE',
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            }
        })
        .catch(error => console.error('Unable to add like.', error));
    }

    function _displayElasticItems(data) {
        let items = [];
        data.hits.hits.forEach(item => {
            items.push({
                id: item._source.id,
                nickName: item._source.nickName,
                education: item._source.education,
                areaOfExpertise: item._source.areaOfExpertise,
                isAccountActivated: item._source.isAccountActivated,
                avatarImage: null,
            })
        })

        _displayItems(items);
    }

    function _displayAutocomplete(data) {
        let input = document.getElementById('psychoResults');
        input.innerHTML = "";

        data.hits.hits.forEach(item => {
            let option = document.createElement('option');
            option.value = item._source.nickName;
            input.append(option);
        })
    }

    function _displayItems(data) {
        const container = document.getElementById('psycho-container');
        container.innerHTML = '';

        data.forEach(item => {
            let newDiv = document.importNode(template.content, true);

            newDiv.getElementById('psycho-name').textContent = item.nickName;
            newDiv.getElementById('psycho-image').src = item.avatarImage == null ? "/img/user-profile.png" : "data:image/png;base64," + item.avatarImage;
            newDiv.getElementById('psycho-age').textContent = item.age;
            newDiv.getElementById('psycho-degree').textContent = item.education;
            newDiv.getElementById('psycho-expertise-area').textContent = item.areaOfExpertise;
            newDiv.getElementById('psycho-experience').textContent = item.workExperience;
            newDiv.getElementById('psycho-likes').textContent = item.likes;

            if (item.isAccountActivated == 'true') {
                newDiv.getElementById('psycho-confirm').textContent = 'yes';
            }
            else {
                newDiv.getElementById('psycho-confirm').textContent = 'no';
            }

            if (item.isCurrentUserSetLike) {
                newDiv.getElementById('psycho-like').innerHTML = '<i id="psycho-like-like" class="fas fa-heart" style="color: red; font-size: 20px;"></i>';
            }

            //add event listener for click on like
            newDiv.getElementById('psycho-like-like').addEventListener('click', function (element) {
                let container = document.getElementById('psycho-' + item.id);

                //there is already like
                if (element.target.classList.contains('fas')) {
                    removeLikeFromProfile(item.id);

                    container.querySelector('#psycho-like-like').classList.add('far');
                    container.querySelector('#psycho-like-like').classList.remove('fas');

                    let likes = parseInt(container.querySelector('#psycho-likes').innerHTML);
                    container.querySelector('#psycho-likes').innerHTML = likes - 1;
                }
                else {
                    addLikeToProfile(item.id);

                    container.querySelector('#psycho-like-like').classList.add('fas');
                    container.querySelector('#psycho-like-like').classList.remove('far');

                    let likes = parseInt(container.querySelector('#psycho-likes').innerHTML);
                    container.querySelector('#psycho-likes').innerHTML = likes + 1;
                }
            });

            //to get access to element
            newDiv.getElementById('psycho-div').setAttribute('id', 'psycho-' + item.id);

            container.append(newDiv);
        });
    }

</script>
